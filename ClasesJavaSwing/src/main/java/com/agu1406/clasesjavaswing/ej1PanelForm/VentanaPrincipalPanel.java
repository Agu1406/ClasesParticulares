/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.agu1406.clasesjavaswing.ej1PanelForm;

// Importaciones básicas para interfaces
import javax.swing.JDialog;
import javax.swing.SwingUtilities;
import java.awt.Dialog;
import java.awt.Window;

/**
 *
 * @author agust
 */
public class VentanaPrincipalPanel extends javax.swing.JPanel {

    /**
     * Creates new form VentanaPrincipalPanel
     */
    public VentanaPrincipalPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        botonIrDialogo = new javax.swing.JButton();

        botonIrDialogo.setText("Ir a dialogo");
        botonIrDialogo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonIrDialogoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(153, 153, 153)
                .addComponent(botonIrDialogo)
                .addContainerGap(155, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(107, 107, 107)
                .addComponent(botonIrDialogo)
                .addContainerGap(170, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void botonIrDialogoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonIrDialogoActionPerformed
        // TODO add your handling code here:
        abrirDialogo();
    }//GEN-LAST:event_botonIrDialogoActionPerformed
    
    /**
     * Método con la logica de acción tras pulsar el botón "Ir al dialogo".
     */
    private void abrirDialogo() {
        /*
         * En el contexto del ejercicio actual tenemos dos "ventanas", una se llama
         * "VentanaPrincipalPanel" y la otra se llama "DialogoSecundarioPanel" por
         * lo que el código necesita saber en cual de las ventanas se va a ejecutar
         * la acción que programemos, en este caso "Owner" tiene guardada la
         * dirección de la ventana "VentanaPrincipalPanel".
         */
        Window owner = SwingUtilities.getWindowAncestor(this);
        
        /*
         * Creamos un JDialog, ¿Qué es? Tiene muchos nombres, pop-up, ventana
         * emergente, ventana secundaria, es una ventana que se abre encima de
         * una ventana o programa principal.
         */
        JDialog dialogo = new JDialog(
                // En cual ventana se mostrara/creara el diálogo.
                owner, 
                // Nombre que tendrá la ventana (aparece en la barra superior)
                "Dialogo",
                /*
                 * Nos permite configurar el tipo de ventana, algunas ventanas
                 * por ejemplo, como los mensajes de error no se pueden cerrar
                 * hasta darle al botón de cerrar, ese es este caso, por eso
                 * se llama "APPLICATION_MODAL".
                 */
                Dialog.
                ModalityType.
                APPLICATION_MODAL
        );
        
        /*
         * Ahora que ya hemos creado el dialogo con la configuración deseada
         * tenemos que indicarle a Java cual sera su contenido, por eso,
         * creamos una nueva instancia de DialogoSecundarioPanel el cual
         * va a crear un JPanel dentro del JDialog, ya que el JPanel es
         * el elemento necesario para "pintar" botones, acciones, etc.
         */
        dialogo.setContentPane(new DialogoSecundarioPanel(dialogo));
        
        /*
         * Si ya hemos agregado todo lo que se utilizara en la vetana
         * la "empaquetamos", "pack" se asegura de que la venta tenga
         * , como minimo, el tamaño suficiente para mostrar todo el
         * contenido que hayamos agregado.
         */
        dialogo.pack();
        
        /*
         * Recordemso que esta es una ventana emergente o pop-up
         * que aparecera "encima" de la ventana principal, por eso
         * utilizando esto hacemos que la ventana emergente aparezca
         * justo en el centro vertical y horizontal de la ventana
         * principal.
         */
        dialogo.setLocationRelativeTo(owner);
        
        /*
         * Por defecto las ventanas estan todas ocultas o "no abiertas"
         * hasta que se activen, como llegados aquí ya esta todo hecho
         * el paso final es hacer que se abra/aparezca, el termino más
         * comodo lo eliges tú.
         */
        dialogo.setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonIrDialogo;
    // End of variables declaration//GEN-END:variables
}
